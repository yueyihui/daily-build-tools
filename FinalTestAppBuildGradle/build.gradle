apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "com.honeywell.finaltest"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
            jniLibs.srcDirs = ['src/main/libs']
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            resources.srcDirs = ['src/main/java', 'src/main/aidl']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
    signingConfigs {
        release {
            storeFile file("../../signature/mykey_system.jks")
            storePassword '111111'
            keyAlias 'lipeng'
            keyPassword '111111'
        }

        debug {
            storeFile file("../../signature/mykey_system.jks")
            storePassword '111111'
            keyAlias 'lipeng'
            keyPassword '111111'
        }
    }

    task ndkBuild(type: Exec) {
        commandLine 'ndk-build', '-C', file('src/main/').absolutePath
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "FinalTest.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
            signingConfig signingConfigs.release
        }
        debug {
            jniDebuggable true
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "FinalTestDebug.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.support:appcompat-v7:23.2.1'
    testCompile 'junit:junit:4.12'
}
